<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Borrowed Books List</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <style>
    body {
      font-family: 'Arial', sans-serif;
      background: linear-gradient(90deg, #ebf3ed, #dee6e1);
      margin: 0;
      padding: 0;
    }
    header, footer {
      position: fixed;
      width: 100%;
      z-index: 10;
    }
    .app-header {
      top: 0;
      display: flex;
      justify-content: space-between;
      align-items: center;
      background: linear-gradient(90deg, #0b8753, #0f3443);
      color: white;
      padding: 1rem;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
      width: 100%;
    }
    .container {
      max-width: 1000px;
      margin: 80px auto 100px;
    }
    .borrowed-item {
      background: #fff;
      border-radius: 8px;
      padding: 15px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      margin-bottom: 10px;
      transition: transform 0.3s ease;
    }
    .basic-info{
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .hidden {
      display: none;
    }
    .borrowed-item button {
      background: linear-gradient(90deg, #0b8753, #0f3443);
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 4px;
      cursor: pointer;
    }
    .app-footer {
  bottom: 0;
  display: flex;
  justify-content: space-around;
  align-items: center;
  background: linear-gradient(140deg, #0b8753, #0f3443);
  color: white;
  padding: 0.75rem 0;
  border-top-left-radius: 15px;
  border-top-right-radius: 15px;
}
.app-footer button {
  display: flex;
  flex-direction: column;
  align-items: center;
  background: none;
  border: none;
  color: white;
  font-size: 1.rem;
  cursor: pointer;
}
.over{
  color: red;
}
.ok{
  color: #006d40;
}
.app-footer button i {
  font-size: 1rem;
}

.app-footer button:hover {
  color: #FFC75F;
}

  </style>
</head>
<body>
  <header class="app-header">
    <div class="menu-icon"><i class="fas fa-bars"></i></div>
    <div class="app-title">Borrowed Books</div>
    <div class="profile-icon"><i class="fas fa-user-circle"></i></div>
  </header>

  <div class="container">
    <% borrowedBooks.forEach((data) => { %>
      <div class="borrowed-item">
        <div class="basic-info <%= new Date(data.dueDate) < new Date() ? 'over' : 'ok' %>">
          <strong><%= data.studentId %></strong><br>
          <span><strong> No:</strong> <%= data.bookNumber %></span>
          <button class="details-btn">Details</button>
        </div>
        <div class="details hidden ">
          <br>
          <span><strong>Book Name:</strong> <%= data.bookTitle %></span><br>
          <span><strong>Student Name:</strong> <%= data.studentName %></span><br>
          
          <span class="<%= new Date(data.dueDate) < new Date() ? 'over' : 'ok' %>">
            <strong>Due Date:</strong> <%= data.dueDate.toDateString() %>
          </span><br><br>
          
          <button value="<%= data.bookNumber %>" class="return">Re-rent Book</button>
        </div>
      </div>
    <% }) %>
  </div>

  <footer class="app-footer">
    <button onclick="navigateTo('home')"><i class="fas fa-home"></i> Home</button>
    <button onclick="navigateTo('books')"><i class="fas fa-book"></i> Books</button>
    <button onclick="navigateTo('users')"><i class="fas fa-user"></i> Students</button>
  </footer>

  <script>
    document.querySelectorAll('.details-btn').forEach(button => {
      button.addEventListener('click', () => {
        const details = button.closest('.borrowed-item').querySelector('.details');
        details.classList.toggle('hidden');
      });
    });

    document.querySelectorAll('.return').forEach(button => {
      button.addEventListener('click', () => {
        const bookNumber = button.value;
        button.disabled = true;
        button.textContent = "Returning...";
        fetch('/transactions/return', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ bookNumber }),
        })
        .then(response => response.json())
        .then(data => {
          if (data.response.success) {
            button.closest('.borrowed-item').remove();
          }
        })
        .catch(() => alert('Error processing return.'));
      });
    });

    function navigateTo(page) {
      const routes = { home: "/home", books: "/books", users: "/users" };
      if (routes[page]) {
        window.location.href = routes[page];
      }
    }
  </script>
</body>
</html>
