<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add a Book</title>
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
    rel="stylesheet"
  >
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  
  <style>
     body {
      background: linear-gradient(135deg, #ffffff, #dae7da);
      font-family: 'Arial', sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }
    header, footer {
  position: fixed;
  width: 100%;
  z-index: 10;
}

/* Top Navigation Bar */
.app-header {
  top: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: linear-gradient(40deg, #0b8753, #0f3443);
  color: white;
  padding: 1rem;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  width: 100%;
}

.app-header .menu-icon,
.app-header .profile-icon {
  font-size: 1.5rem;
  cursor: pointer;
}

.app-header .menu-icon:hover,
.app-header .profile-icon:hover {
  color: #FFC75F; /* Highlight on hover */
}

.app-title {
  font-size: 1.25rem;
  font-weight: bold;
  text-align: center;
}
.profile-icon{
    margin-right: 30px;
}
    .form-container {
      border-radius: 12px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      padding: 30px;
      max-width: 500px;
      width: 90%;
    }

    .form-title {
      text-align: center;
      font-size: 1.8rem;
      font-weight: bold;
      color: #4a47a3;
      margin-bottom: 20px;
    }

    .form-control {
      border-radius: 8px;
    }

    .btn-submit {
      background: linear-gradient(90deg, #34e89e, #0f3443);
      border: none;
      border-radius: 20px;
      color: white;
      font-weight: bold;
      padding: 10px 15px;
      cursor: pointer;
      width: 100%;
      transition: transform 0.3s ease, background-color 0.3s ease;
    }

    .btn-submit:hover {
      background: linear-gradient(90deg, #0f3443, #34e89e);
      transform: scale(1.05);
    }

    .feedback {
      color: red;
      font-size: 0.9rem;
      margin-top: -10px;
      margin-bottom: 10px;
      display: none;
    }

    #response {
      margin-top: 15px; 
      padding: 10px 15px; 
      border-radius: 8px; 
      font-size: 1rem; 
      font-weight: 500; 
      text-align: center; 
      display: none; 
    }

    #response.success {
      background-color: #d4edda; 
      color: #155724;
      border: 1px solid #c3e6cb;
    }

    #response.error {
      background-color: #f8d7da; 
      color: #721c24; 
      border: 1px solid #f5c6cb; 
    }
    .app-footer {
  bottom: 0;
  display: flex;
  justify-content: space-around;
  align-items: center;
  background: linear-gradient(140deg, #0b8753, #0f3443);
  color: white;
  padding: 0.75rem 0;
  border-top-left-radius: 15px;
  border-top-right-radius: 15px;
}
.app-footer button {
  display: flex;
  flex-direction: column;
  align-items: center;
  background: none;
  border: none;
  color: white;
  font-size: 1.rem;
  cursor: pointer;
}

.app-footer button i {
  font-size: 1rem;
}

.app-footer button:hover {
  color: #FFC75F;
}
  </style>
</head>
<body>
  <header class="app-header">
    <div class="menu-icon"><i class="fas fa-bars"></i></div>
    <div class="app-title">Add Books</div>
  </header>
  <div class="form-container">
    <form id="addBookForm">
      <div class="mb-3">
        <label for="bookNumber" class="form-label">Book Number</label>
        <input type="number" min="1" class="form-control" id="bookNumber" placeholder="Enter book number" required>
        <div class="feedback" id="numberFeedback">Please enter a valid bookNumber.</div>
      </div>
      <div class="mb-3">
        <label for="title" class="form-label">Book Title</label>
        <input type="text" class="form-control" id="title" placeholder="Enter book title" required>
      </div>
      <div class="mb-3">
        <label for="author" class="form-label">Author</label>
        <input type="text" class="form-control" id="author" placeholder="Enter author's name" >
        <div class="feedback" id="authorFeedback">Please enter a valid author name.</div>
      </div>
      <div class="mb-3">
        <label for="genre" class="form-label">Genre</label>
        <input type="text" class="form-control" id="genre" placeholder="Enter genre">
      </div>
      <div class="mb-3">
        <label for="price" class="form-label">Price ($)</label>
        <input type="number" class="form-control" id="price" placeholder="Enter price" min="0">
      </div>
      <div id="response" class="mt-3"></div>

      <button type="submit" class="btn-submit">Add Book</button>
    </form>
  </div>
  <footer class="app-footer">
    <button onclick="navigateTo('home')"><i class="fas fa-home"></i> Home</button>
    <button onclick="navigateTo('books')"><i class="fas fa-book"></i> Books</button>
    <button onclick="navigateTo('users')"><i class="fas fa-user"></i> Students</button>
  </footer>
  <script>
    const form = document.getElementById('addBookForm');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      // Clear feedback and response
      document.querySelectorAll('.feedback').forEach(fb => fb.style.display = 'none');
      const responseElement = document.getElementById('response');
      responseElement.style.display = 'none';

      // Get form values
      const bookNumber = document.getElementById('bookNumber').value.trim();
      const title = document.getElementById('title').value.trim();
      const author = document.getElementById('author').value.trim();
      const genre = document.getElementById('genre').value.trim();
      const price = document.getElementById('price').value.trim();

      // Validate inputs
      let valid = true;

      if (!bookNumber) {
        document.getElementById('numberFeedback').style.display = 'block';
        valid = false;
      }

      if (!title) {
        document.getElementById('authorFeedback').style.display = 'block';
        valid = false;
      }

      if (valid) {
        try {
          // Send the data using fetch
          const response = await fetch('/books/add-book', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ bookNumber, title, author, genre, price }),
          });

          // Handle the server's response
          if (response.ok) {
            const result = await response.json();
            responseElement.innerText = `Success: ${result.message}`;
            responseElement.className = 'success';
            responseElement.style.display = 'block';
            setTimeout(() => {
              responseElement.style.display = 'none';
            }, 3000);
            form.reset();
          } else {
            const error = await response.json();
            responseElement.innerText = `Error: ${error.error}`;
            responseElement.className = 'error';
            responseElement.style.display = 'block';
            setTimeout(() => {
              responseElement.style.display = 'none';
            }, 3000);
          }
        } catch (err) {
          responseElement.innerText = `An unexpected error occurred: ${err.message}`;
          responseElement.className = 'error';
          responseElement.style.display = 'block';
          setTimeout(() => {
              responseElement.style.display = 'none';
            }, 3000);
        }
      }
    });
    function navigateTo(page) {
      const routes = { home: "/home", books: "/books", users: "/users" };
      if (routes[page]) {
        window.location.href = routes[page];
      }
    }
  </script>

</body>
</html>
