<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Student Sign-Up Form</title>
  <link 
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" 
    rel="stylesheet"
  >
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

  <style>
    body {
      background: linear-gradient(135deg, #ffffff, #dae7da);
      font-family: 'Arial', sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }
    header, footer {
  position: fixed;
  width: 100%;
  z-index: 10;
}

/* Top Navigation Bar */
.app-header {
  top: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: linear-gradient(40deg, #0b8753, #0f3443);
  color: white;
  padding: 1rem;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  width: 100%;
}

.app-header .menu-icon,
.app-header .profile-icon {
  font-size: 1.5rem;
  cursor: pointer;
}

.app-header .menu-icon:hover,
.app-header .profile-icon:hover {
  color: #FFC75F; /* Highlight on hover */
}

.app-title {
  font-size: 1.25rem;
  font-weight: bold;
  text-align: center;
}

    .form-container {
      border-radius: 12px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      padding: 30px;
      max-width: 500px;
      width: 90%;
    }

    .form-title {
      text-align: center;
      font-size: 1.8rem;
      font-weight: bold;
      color: #4a47a3;
      margin-bottom: 20px;
    }

    .btn-submit {
      background: linear-gradient(90deg, #34e89e, #0f3443);
      border: none;
      border-radius: 20px;
      color: white;
      font-weight: bold;
      padding: 10px 15px;
      cursor: pointer;
      width: 100%;
      transition: transform 0.3s ease, background-color 0.3s ease;
    }

    .btn-submit:hover {
      background: linear-gradient(90deg, #0f3443, #34e89e);
      transform: scale(1.05);
    }

    .hidden {
      display: none;
    }
    #response {
      margin-top: 15px; 
      padding: 10px 15px; 
      border-radius: 8px; 
      font-size: 1rem; 
      font-weight: 500; 
      text-align: center; 
      display: none; 
    }

    #response.success {
      background-color: #d4edda; 
      color: #155724;
      border: 1px solid #c3e6cb;
    }

    #response.error {
      background-color: #f8d7da; 
      color: #721c24; 
      border: 1px solid #f5c6cb; 
    }
    .app-footer {
  bottom: 0;
  display: flex;
  justify-content: space-around;
  align-items: center;
  background: linear-gradient(140deg, #0b8753, #0f3443);
  color: white;
  padding: 0.75rem 0;
  border-top-left-radius: 15px;
  border-top-right-radius: 15px;
}
.app-footer button {
  display: flex;
  flex-direction: column;
  align-items: center;
  background: none;
  border: none;
  color: white;
  font-size: 1.rem;
  cursor: pointer;
}
.app-footer button i {
  font-size: 1rem;
}

.app-footer button:hover {
  color: #FFC75F;
}
  </style>
</head>
<body>
  <header class="app-header">
    <div class="menu-icon"><i class="fas fa-bars"></i></div>
    <div class="app-title">register</div>
  </header>
  <div class="form-container">
    <form id="studentForm">
      <div class="mb-3">
        <label for="studentName" class="form-label">Student Name</label>
        <input type="text" class="form-control" id="studentName" placeholder="Enter student name" required>
      </div>
      <div class="mb-3">
        <label for="class" class="form-label">Class</label>
        <select id="class" class="form-select" required>
          <option value="">Select Class</option>
          <option value="1">1st Standard</option>
          <option value="2">2nd Standard</option>
          <option value="3">3rd Standard</option>
          <option value="4">4th Standard</option>
          <option value="5">5th Standard</option>
          <option value="6">6th Standard</option>
          <option value="7">7th Standard</option>
          <option value="8">8th Standard</option>
          <option value="9">9th Standard</option>
          <option value="10">10th Standard</option>
        </select>
      </div>
      <div class="mb-3 hidden" id="divisionField">
        <label for="division" class="form-label">Division</label>
        <select id="division" class="form-select">
          <option value="A">A</option>
          <option value="B">B</option>
        </select>
      </div>
      <div class="mb-3">
        <label for="rollNumber" class="form-label">Roll Number</label>
        <select id="rollNumber" class="form-select" required>
          <option value="">Select Roll Number</option>
          <% for (let i = 1; i <= 20; i++) { %>
            <option value="<%= i %>"><%= i %></option>
          <% } %>
        </select>
      </div>
      
      <div class="mb-3">
        <label class="form-label">Gender</label>
        <div>
          <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="gender" id="male" value="Male" required>
            <label class="form-check-label" for="male">Male</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="gender" id="female" value="Female" required>
            <label class="form-check-label" for="female">Female</label>
          </div>
        </div>
      </div>
      <div id="response" class="mt-3"></div>

      <button type="submit" class="btn-submit">Sign Up</button>
    </form>
  </div>
  <footer class="app-footer">
    <button onclick="navigateTo('home')"><i class="fas fa-home"></i> Home</button>
    <button onclick="navigateTo('books')"><i class="fas fa-book"></i> Books</button>
    <button onclick="navigateTo('users')"><i class="fas fa-user"></i> Students</button>
  </footer>
  <script>
    const classField = document.getElementById('class');
    const divisionField = document.getElementById('divisionField');

    const responseElement = document.getElementById('response');
    responseElement.style.display = 'none';

    classField.addEventListener('change', () => {
      if (classField.value === "4") {
        divisionField.classList.remove('hidden');
      } else {
        divisionField.classList.add('hidden');
      }
    });

    document.getElementById('studentForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const studentName = document.getElementById('studentName').value.trim();
      const selectedClass = document.getElementById('class').value;
      const division = classField.value === "4" ? document.getElementById('division').value : 'None';
      const rollNumber = document.getElementById('rollNumber').value;
      const gender = document.querySelector('input[name="gender"]:checked').value;
      
      const classMap = {
          1: "A",
          2: "B",
          3: "C",
          4: "D",
          5: "E",
          6: "F",
          7: "G",
          8: "H",
          9: "I",
          10:"J",
        };
      const classPrefix = classMap[Number(selectedClass)] || "X";
      let genderPrefix = gender === "Male" ? "B" : "G"; 
      if(selectedClass == "4"){
         studentId = `${classPrefix}${division}${genderPrefix}${rollNumber}`;
      }else{
         studentId = `${classPrefix}${genderPrefix}${rollNumber}`;
      }
      console.log(studentId);
      
      if (!studentName || !selectedClass  || !rollNumber || !gender) {
    alert("Please fill out all required fields.");
    return;
} else {
    try {
        // Send the data using fetch
        const response = await fetch('/users/add-user', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ studentName, selectedClass, division, rollNumber, gender, studentId }),
        });

        // Handle the server's response
        if (response.ok) {
          console.log(response);
          
            const result = await response.json();
            responseElement.innerText = `Success: ${result.message}`;
            responseElement.className = 'success';
            responseElement.style.display = 'block';
            setTimeout(() => {
              responseElement.style.display = 'none';
              e.target.reset();
            }, 3000);
           
          } else {
            const error = await response.json();
            responseElement.innerText = `Error: ${error.error}`;
            responseElement.className = 'error';
            responseElement.style.display = 'block';
            setTimeout(() => {
              responseElement.style.display = 'none';
            }, 3000);
          }
        }
         catch (err) {
          responseElement.innerText = `An unexpected error occurred: ${err.message}`;
          responseElement.className = 'error';
          responseElement.style.display = 'block';
          setTimeout(() => {
              responseElement.style.display = 'none';
            }, 3000);
        }
}
    });
    function navigateTo(page) {
      const routes = { home: "/home", books: "/books", users: "/users" };
      if (routes[page]) {
        window.location.href = routes[page];
      }
    }
  </script>
</body>
</html>
